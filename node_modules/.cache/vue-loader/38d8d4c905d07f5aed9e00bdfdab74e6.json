{"remainingRequest":"/Users/root1/Desktop/学习/vue-element-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/root1/Desktop/学习/vue-element-web/src/views/book/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/root1/Desktop/学习/vue-element-web/src/views/book/list.vue","mtime":1621169398000},{"path":"/Users/root1/Desktop/学习/vue-element-web/node_modules/cache-loader/dist/cjs.js","mtime":1621132353000},{"path":"/Users/root1/Desktop/学习/vue-element-web/node_modules/babel-loader/lib/index.js","mtime":1621132352000},{"path":"/Users/root1/Desktop/学习/vue-element-web/node_modules/cache-loader/dist/cjs.js","mtime":1621132353000},{"path":"/Users/root1/Desktop/学习/vue-element-web/node_modules/vue-loader/lib/index.js","mtime":1621132357000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvUGFnaW5hdGlvbi9pbmRleCcKaW1wb3J0IHdhdmVzIGZyb20gJy4uLy4uL2RpcmVjdGl2ZS93YXZlcy93YXZlcycKaW1wb3J0IHsgZ2V0Q2F0ZWdvcnksIGxpc3RCb29rLCBkZWxldGVCb29rIH0gZnJvbSAnLi4vLi4vYXBpL2Jvb2snCmltcG9ydCB7IHBhcnNlVGltZSB9IGZyb20gJy4uLy4uL3V0aWxzL2luZGV4JwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgUGFnaW5hdGlvbiB9LAogIGRpcmVjdGl2ZXM6IHsgd2F2ZXMgfSwKICBmaWx0ZXJzOiB7CiAgICB2YWx1ZUZpbHRlcih2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUgfHwgJ+aXoCcKICAgIH0sCiAgICB0aW1lRmlsdGVyKHRpbWUpIHsKICAgICAgcmV0dXJuIHRpbWUgPyBwYXJzZVRpbWUodGltZSwgJ3t5fS17bX0te2R9IHtofTp7aX0nKSA6ICfml6AnCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBsaXN0OiBbXSwKICAgICAgdG90YWw6IDAsCgogICAgICBsaXN0UXVlcnk6IHt9LAogICAgICBzaG93Q292ZXI6IGZhbHNlLAogICAgICBjYXRlZ29yeUxpc3Q6IFtdCgogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucGFyc2VRdWVyeSgpCiAgfSwKICBtb3VudGVkKCkgewoKICAgIHRoaXMuZ2V0Q2F0ZWdvcnlMaXN0KCkKICAgIHRoaXMuZ2V0TGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBwYXJzZVF1ZXJ5KCkgewogICAgICBjb25zdCBsaXN0UXVlcnkgPSB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBwYWdlU2l6ZTogMTAsCiAgICAgICAgc29ydDogJytpZCcKICAgICAgfQogICAgICB0aGlzLmxpc3RRdWVyeSA9IHsgLi4ubGlzdFF1ZXJ5LCAuLi50aGlzLmxpc3RRdWVyeSB9CiAgICB9LAogICAgaGFuZGxlVXBkYXRlKHJvdykgewogICAgICBjb25zb2xlLmxvZyhyb3cpCiAgICAgIC8v6Lez6L2s5Yiw57yW6L6R6aG16Z2iCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvYm9vay9lZGl0LyR7cm93LmZpbGVOYW1lfWApCiAgICB9LAogICAgaGFuZGxlRGVsZXRlKHJvdykgewogICAgICAvL+WIoOmZpAogICAgICAvL2FsZXJ0KCfliKDpmaTmk43kvZwnKQogICAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaQnLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgLy/pgInnoa7lrprlkI7vvIzmiY3kvJrmiafooYwKICAgICAgICBkZWxldGVCb29rKHJvdy5maWxlTmFtZSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLm1zZyB8fCAn5Yig6Zmk5oiQ5YqfJywKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgfSkKICAgICAgICAgIHRoaXMuaGFuZGxlRmlsdGVyKCkKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIHNvcnRDaGFuZ2UoZGF0YSkgewogICAgICBjb25zb2xlLmxvZygnc29ydENoYW5nZScsIGRhdGEpCiAgICAgIC8vYWxlcnQoZGF0YS5vcmRlciApCiAgICAgIGNvbnN0IHsgcHJvcCwgb3JkZXIgfSA9IGRhdGEKICAgICAgdGhpcy5zb3J0QnkocHJvcCwgb3JkZXIpCiAgICB9LAogICAgc29ydEJ5KHByb3AsIG9yZGVyKSB7CiAgICAgIGlmKG9yZGVyID09PSAnYXNjZW5kaW5nJykgewogICAgICAgIHRoaXMubGlzdFF1ZXJ5LnNvcnQgPSBgKyR7cHJvcH1gCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9IGAtJHtwcm9wfWAKICAgICAgfQogICAgICB0aGlzLmhhbmRsZUZpbHRlcigpCiAgICB9LAoKICAgIHdyYXBwZXJLZXl3b3JkKGssIHYpIHsKICAgICAgZnVuY3Rpb24gaGlnaExpZ2h0KHZhbHVlKSB7CiAgICAgICAgcmV0dXJuIGA8c3BhbiBzdHlsZT0iY29sb3I6IzE4OTBmZiI+JHt2YWx1ZX08L3NwYW4+YAogICAgICB9CiAgICAgIGlmKCF0aGlzLmxpc3RRdWVyeVtrXSkgewogICAgICAgIHJldHVybiB2CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy9yZXR1cm4gdgogICAgICAgIHJldHVybiB2LnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLmxpc3RRdWVyeVtrXSwgJ2lnJyksIHYgPT4gaGlnaExpZ2h0KHYpKQogICAgICB9CiAgICB9LAoKICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgIGxpc3RCb29rKHRoaXMubGlzdFF1ZXJ5KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zdCB7IGxpc3QsIGNvdW50IH0gPSByZXNwb25zZS5kYXRhCiAgICAgICAgdGhpcy5saXN0ID0gbGlzdAogICAgICAgIHRoaXMudG90YWwgPSBjb3VudAogICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICAgIHRoaXMubGlzdC5mb3JFYWNoKGJvb2sgPT4gewogICAgICAgICAgYm9vay50aXRsZVdyYXBwZXIgPSB0aGlzLndyYXBwZXJLZXl3b3JkKCd0aXRsZScsIGJvb2sudGl0bGUpCiAgICAgICAgICBib29rLmF1dGhvcldyYXBwZXIgPSB0aGlzLndyYXBwZXJLZXl3b3JkKCdhdXRob3InLCBib29rLmF1dGhvcikKCiAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBnZXRDYXRlZ29yeUxpc3QoKSB7CiAgICAgIGdldENhdGVnb3J5KCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5jYXRlZ29yeUxpc3QgPSByZXNwb25zZS5kYXRhCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRmlsdGVyKCkgewogICAgICBjb25zb2xlLmxvZygnaGFuZGxlJywgdGhpcy5saXN0UXVlcnkpCiAgICAgIC8vYWxlcnQodGhpcy5saXN0UXVlcnkpCiAgICAgIHRoaXMuZ2V0TGlzdCh0aGlzLmxpc3RRdWVyeSkKICAgIH0sCiAgICBoYW5kbGVDcmVhdGUoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvYm9vay9jcmVhdGUnKQoKICAgIH0sCiAgICBjaGFuZ2VTaG93Q292ZXIodmFsdWUpIHsKCiAgICAgIHRoaXMuc2hvd0NvdmVyID0gdmFsdWUKICAgIH0KICB9Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/book","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.title\"\n        placeholder=\"书名\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        clearable\n        @keyup.enter.native=\"handleFilter\"\n        @clear=\"handleFilter\"\n        @blur=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.author\"\n        placeholder=\"作者\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        clearable\n        @keyup.enter.native=\"handleFilter\"\n        @clear=\"handleFilter\"\n        @blur=\"handleFilter\"\n      />\n\n      <el-select\n        v-model=\"listQuery.category\"\n        placeholder=\"分类\"\n        clearable\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n        @clear=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in categoryList\"\n          :key=\"item.value\"\n          :label=\"item.label + '(' + item.num + ')'\"\n          :value=\"item.value\"\n\n        ></el-option>\n\n      </el-select>\n\n      <el-button\n        v-waves\n        class=\"filter-item\"\n        type=\"primary\"\n        icon=\"el-icon-search\"\n        style=\"margin-left: 10px\"\n        @click=\"handleFilter\"\n      >查询\n      </el-button>\n\n      <el-button\n        class=\"filter-item\"\n        type=\"primary\"\n        icon=\"el-icon-edit\"\n        style=\"margin-left: 5px\"\n        @click=\"handleCreate\"\n      >\n        新增\n      </el-button>\n\n\n      <el-checkbox\n        v-model=\"showCover\"\n        class=\"filter-item\"\n        style=\"margin-left: 5px\"\n        @change=\"changeShowCover\"\n      >\n        显示封面\n      </el-checkbox>\n\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%\"\n      @sort-change=\"sortChange\"\n\n    >\n      <el-table-column\n        label=\"ID\"\n        prop=\"id\"\n        sortable=\"custom\"\n        align=\"cneter\"\n        width=\"80\"\n      ></el-table-column>\n      <el-table-column\n        label=\"书名\"\n        align=\"cneter\"\n        width=\"150\"\n      >\n        <template slot-scope=\"{ row: { titleWrapper }}\">\n          <span v-html=\"titleWrapper\"></span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"作者\"\n        align=\"cneter\"\n        width=\"150\"\n      >\n        <template slot-scope=\"{ row: { authorWrapper }}\">\n          <span v-html=\"authorWrapper\"></span>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"出版社\" prop=\"publisher\" width=\"150\" align=\"center\" />\n      <el-table-column label=\"分类\" prop=\"categoryText\" width=\"150\" align=\"center\" />\n      <el-table-column label=\"语言\" prop=\"language\" width=\"150\" align=\"center\" />\n\n      <el-table-column\n        label=\"封面\"\n        v-if=\"showCover\"\n        prop=\"cover\"\n        width=\"150\"\n        align=\"center\">\n          <template slot-scope=\"scope\">\n            <a :href=\"scope.row.cover\" target=\"_blank\">\n              <img :src=\"scope.row.cover\" style=\"width:120px;height:180px\" />\n            </a>\n          </template>\n      </el-table-column>\n      <el-table-column label=\"文件名\" prop=\"fileName\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"文件路径\" prop=\"filePath\" width=\"100\" align=\"center\" >\n        <template slot-scope=\"{ row: { filePath }}\">\n          <span>{{ filePath | valueFilter }}</span>\n        </template>\n      </el-table-column>\n\n\n      <el-table-column label=\"封面路径\" prop=\"coverPath\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"解压路径\" prop=\"unzipPath\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"上传人\" prop=\"createUser\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"上传时间\" prop=\"createDt\" width=\"100\" align=\"center\" >\n        <template slot-scope=\"{ row: { createDt }}\">\n          <span>{{ createDt | timeFilter }}</span>\n        </template>\n      </el-table-column>\n\n\n      <el-table-column\n        label=\"操作\"\n        width=\"120\"\n        align=\"center\"\n        fixed=\"right\"\n        >\n          <template slot-scope=\"{ row }\">\n            <el-button type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(row)\" />\n            <el-button type=\"text\" icon=\"el-icon-delete\" style=\"color:#f56c6c\" @click=\"handleDelete(row)\" />\n\n          </template>\n      </el-table-column>\n\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0\"\n     :total=\"total\"\n     :page.sync=\"listQuery.page\"\n     :limit.sync=\"listQuery.pageSize\"\n     @pagination=\"getList\"\n     />\n  </div>\n</template>\n<script>\nimport Pagination from '../../components/Pagination/index'\nimport waves from '../../directive/waves/waves'\nimport { getCategory, listBook, deleteBook } from '../../api/book'\nimport { parseTime } from '../../utils/index'\n\nexport default {\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    valueFilter(value) {\n      return value || '无'\n    },\n    timeFilter(time) {\n      return time ? parseTime(time, '{y}-{m}-{d} {h}:{i}') : '无'\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      listLoading: true,\n      list: [],\n      total: 0,\n\n      listQuery: {},\n      showCover: false,\n      categoryList: []\n\n    }\n  },\n  created() {\n    this.parseQuery()\n  },\n  mounted() {\n\n    this.getCategoryList()\n    this.getList()\n  },\n  methods: {\n    parseQuery() {\n      const listQuery = {\n        page: 1,\n        pageSize: 10,\n        sort: '+id'\n      }\n      this.listQuery = { ...listQuery, ...this.listQuery }\n    },\n    handleUpdate(row) {\n      console.log(row)\n      //跳转到编辑页面\n      this.$router.push(`/book/edit/${row.fileName}`)\n    },\n    handleDelete(row) {\n      //删除\n      //alert('删除操作')\n      this.$confirm('此操作将永久删除', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //选确定后，才会执行\n        deleteBook(row.fileName).then(response => {\n          this.$notify({\n            title: '成功',\n            message: response.msg || '删除成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.handleFilter()\n        })\n      })\n    },\n    sortChange(data) {\n      console.log('sortChange', data)\n      //alert(data.order )\n      const { prop, order } = data\n      this.sortBy(prop, order)\n    },\n    sortBy(prop, order) {\n      if(order === 'ascending') {\n        this.listQuery.sort = `+${prop}`\n      } else {\n        this.listQuery.sort = `-${prop}`\n      }\n      this.handleFilter()\n    },\n\n    wrapperKeyword(k, v) {\n      function highLight(value) {\n        return `<span style=\"color:#1890ff\">${value}</span>`\n      }\n      if(!this.listQuery[k]) {\n        return v\n      } else {\n        //return v\n        return v.replace(new RegExp(this.listQuery[k], 'ig'), v => highLight(v))\n      }\n    },\n\n    getList() {\n      this.listLoading = true\n      listBook(this.listQuery).then(response => {\n        const { list, count } = response.data\n        this.list = list\n        this.total = count\n        this.listLoading = false\n        this.list.forEach(book => {\n          book.titleWrapper = this.wrapperKeyword('title', book.title)\n          book.authorWrapper = this.wrapperKeyword('author', book.author)\n\n        })\n      })\n    },\n    getCategoryList() {\n      getCategory().then(response => {\n        this.categoryList = response.data\n      })\n    },\n    handleFilter() {\n      console.log('handle', this.listQuery)\n      //alert(this.listQuery)\n      this.getList(this.listQuery)\n    },\n    handleCreate() {\n      this.$router.push('/book/create')\n\n    },\n    changeShowCover(value) {\n\n      this.showCover = value\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped></style>\n"]}]}